
// Calculate free CO2 in RBCs based on total CO2.
// Compute free CO2 and O2 (or PCO2 and PO2) from total O2 and CO2 (TO2 and TCO2)
// through numerical inversion method that uses SHbO2CO2_EJAP2016 routine.



//%REPLACE %O2CO2_Sol%=("O2CO2SolubilityMPC.mod")


import nsrunit;
unit conversion on;
//%GET %O2CO2_Sol% CELSIUS_DEF()

math TotCO2_CO2InvertMPC {

//%GET %O2CO2_Sol% TIME_DOMAIN()
//%GET %O2CO2_Sol% SPATIAL_DOMAIN()

//%START CO2INVERT
// ***  CO2 invert to get pCO2:
//%SETGLOBALVAL %I%=("8")

//%REPLACE %CO2invert%=("TotCO2_FreeCO2.mod")
//%REPLACE %SHbO2CO2%=("Dash2016SHbO2CO2MPC.mod")

//%REPLACE (%Z%=("CO2_Invert_"))
//%REPLACE (%CPM%=("c","p","m"))
//%REPLACE (%N%=("#1#%I%"),%M%=("#0#%I%-1"))


//%GET %CO2invert% INPUTS("alphaCO2_in=alphaCO2Sys","alphaO2_in=alphaO2Sys","pCO2new_0=pCO2new_%Z%0","pO2in=pO2_%Z%in")
//%GET %SHbO2CO2% OTHERINPUTS("Temp=TempSHbO2CO2")
//%GET %SHbO2CO2% CONSTANTS()
//%GET %CO2invert% InvertOUTPUTS()
//%GET %CO2invert% IterativeVars("pCO2c=pCO2c_%Z%%N%","pCO2p=pCO2p_%Z%%N%","pCO2m=pCO2m_%Z%%N%","dCO2totc=dCO2tot%Z%%N%c","funcCO2=funcCO2_%Z%%N%","dfuncCO2=dfuncCO2_%Z%%N%","pCO2new=pCO2new_%Z%%N%")


//%GET %SHbO2CO2% PARAMETERS()
//%GET %SHbO2CO2% STDCONDITIONS()
//%GET %SHbO2CO2% PO2INPUT("pO2=pO2_%Z%%N%")
//%GET %SHbO2CO2% PCO2INPUT("pCO2=pCO2_%Z%%N%%CPM%")
//%GET %CO2invert% CallSHbO2CO2("pCO2c=pCO2c_%Z%%N%","pCO2p=pCO2p_%Z%%N%","pCO2m=pCO2m_%Z%%N%","pCO2_c=pCO2_%Z%%N%c","pCO2_p=pCO2_%Z%%N%p","pCO2_m=pCO2_%Z%%N%m",,"pO2in=pO2_%Z%in","pO2=pO2_%Z%%N%")

//%GET %SHbO2CO2% INTERMEDIATE_VARS("delpCO2=delpCO2_%Z%%N%%CPM%","pCO2=pCO2_%Z%%N%%CPM%","Temp=TempSHbO2CO2")

//%GET %O2CO2_Sol% CONSTS()
//%GET %O2CO2_Sol% O2CO2SOL_CALCS("TempSys=TempSHbO2CO2")

//%GET %SHbO2CO2% InputConversions("O2=O2_%Z%%N%%CPM%","pO2=pO2_%Z%%N%","CO2=CO2_%Z%%N%%CPM%","pCO2=pCO2_%Z%%N%%CPM%","alphaO2=alphaO2Sys", "alphaCO2=alphaCO2Sys")
//%GET %SHbO2CO2% P50_adj("P501=P501_%Z%%N%%CPM%","P502=P502_%Z%%N%%CPM%","P503=P503_%Z%%N%%CPM%","P504=P504_%Z%%N%%CPM%","P50=P50_%Z%%N%%CPM%","C50=C50_%Z%%N%%CPM%","delpCO2=delpCO2_%Z%%N%%CPM%","alphaO2=alphaO2Sys")

//%GET %SHbO2CO2% EquilConsts()
//%GET %SHbO2CO2% HillCoeff("nH=nH_%Z%%N%%CPM%","pO2=pO2_%Z%%N%")
//%GET %SHbO2CO2% EQUILK4p("K4p=K4p_%Z%%N%%CPM%","C50=C50_%Z%%N%%CPM%","O2=O2_%Z%%N%%CPM%","CO2=CO2_%Z%%N%%CPM%", "nH=nH_%Z%%N%%CPM%")

//%GET %SHbO2CO2% HbCO2Saturate("KHbCO2=KHbCO2_%Z%%N%%CPM%","SHbCO2=SHbCO2_%Z%%N%%CPM%","K4p=K4p_%Z%%N%%CPM%","O2=O2_%Z%%N%%CPM%","CO2=CO2_%Z%%N%%CPM%")
//%GET %SHbO2CO2% CO2calcs("CO2=CO2_%Z%%N%%CPM%","SHbCO2=SHbCO2_%Z%%N%%CPM%","CO2free=CO2free_%Z%%N%%CPM%","CO2bicarb=CO2bicarb_%Z%%N%%CPM%","CO2bound=CO2bound_%Z%%N%%CPM%","CO2tot1=CO2tot1_%Z%%N%%CPM%","CO2tot2=CO2tot2_%Z%%N%%CPM%")
//%GET %CO2invert% TotCO2InvertCalcs("pCO2c=pCO2c_%Z%%N%","pCO2p=pCO2p_%Z%%N%","pCO2new_0=pCO2new_%Z%%M%","pCO2m=pCO2m_%Z%%N%","pCO2old=pCO2old_%Z%%N%","TotCO2in=TotCO2_Invert_in","dCO2totc=dCO2tot%Z%%N%c","funcCO2=funcCO2_%Z%%N%","dfuncCO2=dfuncCO2_%Z%%N%","pCO2new=pCO2new_%Z%%N%", "errCO2=errCO2_%Z%%N%","CO2totc=CO2tot1_%Z%%N%c","CO2totp=CO2tot1_%Z%%N%p","CO2totm=CO2tot1_%Z%%N%m")
//%GET %CO2invert% FinalResult("pCO2new=pCO2new_%Z%%I%","alphaCO2_in=alphaCO2Sys","SHbCO2=SHbCO2_%Z%%I%c")

//%ENDREPLACE
//%ENDREPLACE
//%ENDREPLACE
//%END CO2INVERT

// Set initial values:
Hct_in =0.45;
Temp_in=310;  // Physiological temperature (function of t,x)
TotCO2_Invert_in = 0.02827;
pO2_CO2_Invert_in = 90;    // Needed to determine pCO2
pHrbc_in = 7.238;
DPGrbc_in =.00465; 
Hbrbc_in = .0052;
//alphaCO2_in = 2.8472E-5;


}

